import React, { useState } from "react";
import { useSelector } from "react-redux";
import { submitAdditionalServicesRequest } from "../../../api/additionalServices";
import "./SocialModal.scss";
import { FaInstagram, FaTelegram, FaWhatsapp } from "react-icons/fa";

const SocialModal = ({ isOpen, onClose, selectedSocial }) => {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState(null);
  const { company } = useSelector((state) => state.user);

  const handleSubmit = async () => {
    if (!company) {
      setSubmitStatus({
        type: "error",
        message: "–û—à–∏–±–∫–∞: –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
      });
      return;
    }

    setIsSubmitting(true);
    setSubmitStatus(null);

    try {
      const requestData = {
        company: company.name,
        text: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ª—É–≥–∏ ${selectedSocial}`,
        status: "new",
      };

      await submitAdditionalServicesRequest(requestData);
      setSubmitStatus({
        type: "success",
        message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
      });

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
      setTimeout(() => {
        onClose();
        setSubmitStatus(null);
      }, 2000);
    } catch (error) {
      setSubmitStatus({
        type: "error",
        message: error.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏",
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  if (!isOpen) return null;

  const getSocialInfo = (social) => {
    switch (social) {
      case "whatsapp":
        return {
          title: "WhatsApp",
          description:
            "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ —á–∞—Ç—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –±—ã—Å—Ç—Ä—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–µ–π CRM-—Å–∏—Å—Ç–µ–º–æ–π.",
          icon: <FaWhatsapp />,
        };
      case "telegram":
        return {
          title: "Telegram",
          description:
            "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ —á–∞—Ç—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –±—ã—Å—Ç—Ä—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–µ–π CRM-—Å–∏—Å—Ç–µ–º–æ–π.",
          icon: <FaTelegram />,
        };
      case "instagram":
        return {
          title: "Instagram",
          description:
            "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ —á–∞—Ç—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –±—ã—Å—Ç—Ä—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–µ–π CRM-—Å–∏—Å—Ç–µ–º–æ–π.",
          icon: <FaInstagram />,
        };
      default:
        return {
          title: "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å",
          description: "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏",
          icon: "üîó",
        };
    }
  };

  const socialInfo = getSocialInfo(selectedSocial);

  return (
    <div className="social-modal-overlay" onClick={onClose}>
      <div
        className="social-modal-content"
        onClick={(e) => e.stopPropagation()}
      >
        <button className="social-modal-close" onClick={onClose}>
          &times;
        </button>

        <div className="social-modal-header">
          <div className="social-modal-icon">{socialInfo.icon}</div>
          <h2>–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ {socialInfo.title}</h2>
        </div>

        <div className="social-modal-body">
          <p className="social-modal-description">{socialInfo.description}</p>

          {submitStatus && (
            <div
              className={`social-modal-status social-modal-status--${submitStatus.type}`}
            >
              {submitStatus.message}
            </div>
          )}
        </div>

        <div className="social-modal-actions">
          <button
            className="social-modal-button social-modal-button--cancel"
            onClick={onClose}
            disabled={isSubmitting}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            className="social-modal-button social-modal-button--submit"
            onClick={handleSubmit}
            disabled={isSubmitting}
          >
            {isSubmitting ? (
              <>
                <span className="social-modal-spinner"></span>
                –û—Ç–ø—Ä–∞–≤–∫–∞...
              </>
            ) : (
              "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
            )}
          </button>
        </div>
      </div>
    </div>
  );
};

export default SocialModal;
